# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
#application.secret="%APPLICATION_SECRET%"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO


ws.acceptAnyCertificate=true

###
#ws.ssl {
#  trustManager = {
#    stores = [
#      { path: ${store.directory}/exampletrust.jks }     # Added trust store
#      { path: ${java.home}/lib/security/cacerts } # Fallback to default JSSE trust store
#    ]
#  }
#}

# Logger provided to your application:
#logger.application=DEBUG


#Threads pools

# http://www.widecodes.com/CSVVVjVUjg/play-war-deployment-prevents-tomcat-to-stop.html

akka {
  daemonic=on
}

play.akka.daemonic=on

# application.mode=prod

# https://www.playframework.com/documentation/2.4.x/ThreadPools

# http://liviutudor.com/2014/01/15/about-the-play-framework-and-their-thread-pooling/

# http://stackoverflow.com/questions/24591905/play-framework-2-x-and-blocking-database-call

#application.baseUrl=http://localhost:9000/
#%production%.application.baseUrl=http://www.yourdomain.com/
